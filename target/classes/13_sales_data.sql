-- 13_sales_data.sql

-- =====================================================
-- 1. 매출 데이터 삽입 (INSERT IGNORE 사용) 날짜는 8월중 랜덤덤
-- =====================================================
INSERT INTO erp_system.sales_statistics (
  branch_id, card_sales, cash_sales, mobile_sales,
  net_sales, statistic_date, statistic_hour, total_discount, total_orders, total_sales
)
SELECT
  b.branch_id,
  0.00,
  0.00,
  0.00,
  3000 + ((CONV(SUBSTRING(MD5(CONCAT(b.branch_id,'-',n.n)),1,8),16,10) % 121) * 100) AS price,
  DATE_ADD(
      STR_TO_DATE(CONCAT(YEAR(CURDATE()), '-08-01'), '%Y-%m-%d'),
      INTERVAL (CONV(SUBSTRING(MD5(CONCAT('date-', b.branch_id, '-', n.n)), 1, 8), 16, 10) % 31) DAY
    ) AS statistic_date,       
  CASE d.k WHEN 0 THEN NULL ELSE 9 + ((n.n - 1) % 16) END AS statistic_hour,
  0.00,
  1,
  3000 + ((CONV(SUBSTRING(MD5(CONCAT(b.branch_id,'-',n.n)),1,8),16,10) % 121) * 100)
FROM (
  SELECT 1 AS branch_id UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5
) b
JOIN (
  SELECT 1 AS n UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL
  SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9 UNION ALL SELECT 10 UNION ALL
  SELECT 11 UNION ALL SELECT 12 UNION ALL SELECT 13 UNION ALL SELECT 14 UNION ALL SELECT 15 UNION ALL
  SELECT 16 UNION ALL SELECT 17 UNION ALL SELECT 18 UNION ALL SELECT 19 UNION ALL SELECT 20 UNION ALL
  SELECT 21 UNION ALL SELECT 22 UNION ALL SELECT 23 UNION ALL SELECT 24 UNION ALL SELECT 25 UNION ALL
  SELECT 26 UNION ALL SELECT 27 UNION ALL SELECT 28 UNION ALL SELECT 29 UNION ALL SELECT 30 UNION ALL
  SELECT 31 UNION ALL SELECT 32 UNION ALL SELECT 33 UNION ALL SELECT 34 UNION ALL SELECT 35 UNION ALL
  SELECT 36 UNION ALL SELECT 37 UNION ALL SELECT 38 UNION ALL SELECT 39 UNION ALL SELECT 40 UNION ALL
  SELECT 41 UNION ALL SELECT 42 UNION ALL SELECT 43 UNION ALL SELECT 44 UNION ALL SELECT 45 UNION ALL
  SELECT 46 UNION ALL SELECT 47 UNION ALL SELECT 48 UNION ALL SELECT 49 UNION ALL SELECT 50
) n
JOIN (SELECT 0 AS k UNION ALL SELECT 1) d
ORDER BY b.branch_id, statistic_hour IS NULL, statistic_hour;

-- =====================================================
-- 2. 메뉴별 매출 데이터 삽입 (INSERT IGNORE 사용) 날짜는 8월중 랜덤덤
-- =====================================================
INSERT INTO menu_sales_statistics (
    branch_id, 
    discount_amount, 
    menu_id, 
    net_sales, 
    quantity_sold, 
    statistic_date, 
    total_sales
)
SELECT 
    b.branch_id,
    0.00 AS discount_amount,
    FLOOR(1 + (RAND() * 25)) AS menu_id,                 -- 1~25 랜덤
    ROUND((3000 + (RAND() * 12000)), -2) AS net_sales,   -- 3000~15000, 100원 단위
    1 AS quantity_sold,
    DATE_ADD(
      STR_TO_DATE(CONCAT(YEAR(CURDATE()), '-08-01'), '%Y-%m-%d'),
      INTERVAL (CONV(SUBSTRING(MD5(CONCAT('date-', b.branch_id, '-', n.n)), 1, 8), 16, 10) % 31) DAY
    ) AS statistic_date,                                  -- 올해 8월 랜덤일
    ROUND((3000 + (RAND() * 12000)), -2) AS total_sales
FROM (
    SELECT 1 AS branch_id UNION ALL
    SELECT 2 UNION ALL
    SELECT 3 UNION ALL
    SELECT 4 UNION ALL
    SELECT 5
) b
JOIN (
    SELECT 1 AS n UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL
    SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9 UNION ALL SELECT 10 UNION ALL
    SELECT 11 UNION ALL SELECT 12 UNION ALL SELECT 13 UNION ALL SELECT 14 UNION ALL SELECT 15 UNION ALL
    SELECT 16 UNION ALL SELECT 17 UNION ALL SELECT 18 UNION ALL SELECT 19 UNION ALL SELECT 20 UNION ALL
    SELECT 21 UNION ALL SELECT 22 UNION ALL SELECT 23 UNION ALL SELECT 24 UNION ALL SELECT 25 UNION ALL
    SELECT 26 UNION ALL SELECT 27 UNION ALL SELECT 28 UNION ALL SELECT 29 UNION ALL SELECT 30 UNION ALL
    SELECT 31 UNION ALL SELECT 32 UNION ALL SELECT 33 UNION ALL SELECT 34 UNION ALL SELECT 35 UNION ALL
    SELECT 36 UNION ALL SELECT 37 UNION ALL SELECT 38 UNION ALL SELECT 39 UNION ALL SELECT 40 UNION ALL
    SELECT 41 UNION ALL SELECT 42 UNION ALL SELECT 43 UNION ALL SELECT 44 UNION ALL SELECT 45 UNION ALL
    SELECT 46 UNION ALL SELECT 47 UNION ALL SELECT 48 UNION ALL SELECT 49 UNION ALL SELECT 50
) n;

-- =====================================================
-- 3. 카테고리별 매출 데이터 삽입 (INSERT IGNORE 사용) 날짜는 8월중 랜덤덤
-- =====================================================

INSERT INTO erp_system.category_sales_statistics (
  branch_id, category_id, discount_amount, net_sales, quantity_sold, statistic_date, total_sales
)
SELECT
  b.branch_id,
  1 + (CONV(SUBSTRING(MD5(CONCAT('cat-', b.branch_id, '-', n.n)), 1, 8), 16, 10) % 4) AS category_id, -- 1~4
  0.00,
  3000 + ((CONV(SUBSTRING(MD5(CONCAT('price-', b.branch_id, '-', n.n)), 1, 8), 16, 10) % 121) * 100) AS net_sales, -- 3000~15000
  1,
  DATE_ADD(
    STR_TO_DATE(CONCAT(YEAR(CURDATE()), '-08-01'), '%Y-%m-%d'),
    INTERVAL (CONV(SUBSTRING(MD5(CONCAT('date-', b.branch_id, '-', n.n)), 1, 8), 16, 10) % 31) DAY
  ) AS statistic_date,  -- 올해 8월 랜덤일
  3000 + ((CONV(SUBSTRING(MD5(CONCAT('price-', b.branch_id, '-', n.n)), 1, 8), 16, 10) % 121) * 100) AS total_sales
FROM (
  SELECT 1 AS branch_id UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5
) b
JOIN (
  SELECT 1 AS n UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL
  SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9 UNION ALL SELECT 10 UNION ALL
  SELECT 11 UNION ALL SELECT 12 UNION ALL SELECT 13 UNION ALL SELECT 14 UNION ALL SELECT 15 UNION ALL
  SELECT 16 UNION ALL SELECT 17 UNION ALL SELECT 18 UNION ALL SELECT 19 UNION ALL SELECT 20 UNION ALL
  SELECT 21 UNION ALL SELECT 22 UNION ALL SELECT 23 UNION ALL SELECT 24 UNION ALL SELECT 25 UNION ALL
  SELECT 26 UNION ALL SELECT 27 UNION ALL SELECT 28 UNION ALL SELECT 29 UNION ALL SELECT 30 UNION ALL
  SELECT 31 UNION ALL SELECT 32 UNION ALL SELECT 33 UNION ALL SELECT 34 UNION ALL SELECT 35 UNION ALL
  SELECT 36 UNION ALL SELECT 37 UNION ALL SELECT 38 UNION ALL SELECT 39 UNION ALL SELECT 40 UNION ALL
  SELECT 41 UNION ALL SELECT 42 UNION ALL SELECT 43 UNION ALL SELECT 44 UNION ALL SELECT 45 UNION ALL
  SELECT 46 UNION ALL SELECT 47 UNION ALL SELECT 48 UNION ALL SELECT 49 UNION ALL SELECT 50
) n;